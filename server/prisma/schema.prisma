// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// /database/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int          @id @default(autoincrement())
  email        String       @unique
  password     String
  name         String?
  role         Role         @default(CANDIDATE)
  resumes      Resume[]
  applications Application[]
  enrollments  Enrollment[]
  progresses   Progress[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Resume {
  id        Int      @id @default(autoincrement())
  url       String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  skills    Skill[]  @relation("ResumeSkills", references: [id])
  uploadedAt DateTime @default(now())
}

model Job {
  id           Int          @id @default(autoincrement())
  title        String
  description  String
  company      String
  applications Application[]
  createdAt    DateTime     @default(now())
}

model Application {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  job       Job      @relation(fields: [jobId], references: [id])
  jobId     Int
  status    AppStatus @default(PENDING)
  appliedAt DateTime  @default(now())
}

model Course {
  id          Int          @id @default(autoincrement())
  title       String
  description String
  skills      Skill[]      @relation("CourseSkills", references: [id])
  enrollments Enrollment[]
  progresses  Progress[]
  createdAt   DateTime     @default(now())
}

model Skill {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  resumes  Resume[]  @relation("ResumeSkills", references: [id])
  courses  Course[]  @relation("CourseSkills", references: [id])
}

model Enrollment {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  course    Course   @relation(fields: [courseId], references: [id])
  courseId  Int
  enrolledAt DateTime @default(now())
}

model Progress {
  id             Int      @id @default(autoincrement())
  enrollment     Enrollment @relation(fields: [enrollmentId], references: [id])
  enrollmentId   Int
  percentage     Float    @default(0)
  updatedAt      DateTime @updatedAt
}

enum Role {
  CANDIDATE
  RECRUITER
  ADMIN
}

enum AppStatus {
  PENDING
  ACCEPTED
  REJECTED
}
